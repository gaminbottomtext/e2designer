name: Build, test and deploy

on:
  push:
    branches: [ master ]

env:
  BUILD_TYPE: Debug
  QT_VERSION: 5.12.10
  QT_VERSION_ALIAS: 512

jobs:
  build:
  
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v2
    
    - name: Install Qt
      env:
        QtVer: ${{env.QT_VERSION_ALIAS}}
      run: |
        sudo apt-add-repository -y ppa:beineri/opt-qt-${{env.QT_VERSION}}-focal
        sudo apt-get update -q
        sudo apt-get install -y qt${QtVer}base qt${QtVer}tools qt${QtVer}svg libgl1-mesa-dev
        /opt/qt${QtVer}/bin/qt${QtVer}-env.sh
      if: matrix.os == 'ubuntu-latest'
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{env.QT_VERSION}}
      if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest'

    - name: Configure CMake
      env:
        COVERAGE: ${{ fromJSON('{"true":"ON", "false":"OFF"}')[matrix.os == 'ubuntu-latest'] }}
      run: cmake -B ${{github.workspace}}/build -G Ninja -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCODE_COVERAGE=${{env.COVERAGE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      env:
        QT_QPA_PLATFORM: offscreen
      run: ctest -C ${{env.BUILD_TYPE}}
    
    - name: Collect coverage
      run: |
        sudo apt-get install -y lcov
        lcov --no-external --directory . --capture --output-file coverage.info
        lcov --remove coverage.info "moc_*" "*.moc" "qrc_*" "tests/*" --output-file coverage.info
        lcov --list coverage.info
        genhtml coverage.info --output-directory coverage-report
      if: matrix.coverage == 'ON'
    
    - uses: codecov/codecov-action@v2
      with:
        files: ./coverage.info
      if: matrix.coverage == 'ON'

    - uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage-report/
      if: matrix.coverage == 'ON'
    
    - name: Package
      run: cmake --build build --target package
    
    - uses: svenstaro/upload-release-action@v2
      env:
        ARTIFACT: ${{ fromJSON('{"ubuntu-latest":"Linux.sh", "windows-latest":"win64.exe", "macos-latest":"Darwin.dmg"}')[matrix.os] }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/e2designer-*-${{ env.ARTIFACT }}
        file_glob: true
        tag: latest
        overwrite: true
        prerelease: true
        body: "Latest build from master"

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: CMake lint
      run: |
        pip3 install cmakelint
        cmakelint --version
        cmakelint --linelength=100 CMakeLists.txt

    - name: clang-format
      run: |
        clang-format --version
        clang-format -style=file -i \
          $(find . \( -path './Qt-Color-Widgets' -o -path './AppImageUpdaterBridge' -o -path './pegtl' \) -prune -o \
          \( -name '*.hpp' -o -name '*.cpp' \) -print)
        git diff --exit-code

